# Partially update a node
kubectl patch node k8s-node-1 -p '{"spec":{"unschedulable":true}}'

# Update a container's image; spec.containers[*].name is required because it's a merge key
kubectl patch pod valid-pod -p '{"spec":{"containers":[{"name":"kubernetes-serve-hostname","image":"new image"}]}}'

# Update a container's image using a json patch with positional arrays
kubectl patch pod valid-pod --type='json' -p='[{"op": "replace", "path": "/spec/containers/0/image", "value":"new image"}]'

# Disable a deployment livenessProbe using a json patch with positional arrays
kubectl patch deployment valid-deployment  --type json   -p='[{"op": "remove", "path": "/spec/template/spec/containers/0/livenessProbe"}]'

# Add a new element to a positional array
kubectl patch sa default --type='json' -p='[{"op": "add", "path": "/secrets/1", "value": {"name": "whatever" } }]'

# Edit the service named docker-registry
kubectl edit svc/docker-registry  

# Use an alternative editor
KUBE_EDITOR="nano" kubectl edit svc/docker-registry   

# Delete a pod using the type and name specified in pod.json
kubectl delete -f ./pod.json    

# Delete pods and services with same names                                          
kubectl delete pod,service <pod-name> <service-name> 

# Delete pods and services with label 
kubectl delete pods,services -l name=<label-name>            

# Delete all pods and services in namespace 
kubectl -n <namespace> delete pod,svc --all  
                                    
# Delete all pods matching the awk pattern1 or pattern2
kubectl get pods  -n mynamespace --no-headers=true | awk '/pattern1|pattern2/{print $1}' | xargs  kubectl delete -n mynamespace pod